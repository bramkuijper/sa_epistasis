(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    169104,       3573]
NotebookOptionsPosition[    166857,       3494]
NotebookOutlinePosition[    167213,       3510]
CellTagsIndexPosition[    167170,       3507]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Sex-specific epistasis and sexual antagonism - autosomal", "Title",
 CellChangeTimes->{{3.661585378599834*^9, 3.661585391095785*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.666531793078828*^9, 3.666531800974441*^9}}],

Cell[CellGroupData[{

Cell["Haplotypes and fitness", "Section",
 CellChangeTimes->{{3.661582267322104*^9, 3.6615822695623817`*^9}, {
  3.661585444044249*^9, 3.661585445931383*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"haplotypes", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Af", ",", "Bf"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Af", ",", "Bm"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Am", ",", "Bf"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Am", ",", "Bm"}], "}"}], ",", 
     RowBox[{"{", "Y", "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.661585268153973*^9, 3.661585286025504*^9}, {
  3.661585366090962*^9, 3.661585368859123*^9}, {3.6634438801134787`*^9, 
  3.663443963200326*^9}, {3.674120992182129*^9, 3.6741209949015923`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"wlistM", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Am", ",", "Bm", ",", "Y"}], "}"}], ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Af", ",", "Bm", ",", "Y"}], "}"}], ",", 
       RowBox[{"1", "-", "sAm"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Am", ",", "Bf", ",", "Y"}], "}"}], ",", 
       RowBox[{"1", "-", "sBm"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Af", ",", "Bf", ",", "Y"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "sBm"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "sAm"}], ")"}]}], "+", 
        RowBox[{"4", "em"}]}]}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6665324578052073`*^9, 3.666532478175354*^9}, {
   3.6665326131793947`*^9, 3.6665326577514353`*^9}, {3.666532694558786*^9, 
   3.666532908356779*^9}, 3.666533152018214*^9, 3.673979671637773*^9, 
   3.6741210114688587`*^9, {3.674189254038682*^9, 3.674189359011903*^9}, {
   3.674190745020411*^9, 3.67419077102199*^9}, {3.6742224652718554`*^9, 
   3.674222470865095*^9}, {3.6743786394177933`*^9, 3.674378641384441*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"wlistF", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Am", ",", "Am", ",", "Bm", ",", "Bm"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "sAf"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "sBf"}], ")"}]}], "+", 
        RowBox[{"4", "ef"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Af", ",", "Am", ",", "Bm", ",", "Bm"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"hAf", " ", "sAf"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "sBf"}], ")"}]}], "+", 
        RowBox[{"2", " ", "ef"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Af", ",", "Af", ",", "Bm", ",", "Bm"}], "}"}], ",", 
       RowBox[{"1", "-", "sBf"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Am", ",", "Am", ",", "Bf", ",", "Bm"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "sAf"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"hBf", " ", "sBf"}]}], ")"}]}], "+", 
        RowBox[{"2", "ef"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Af", ",", "Am", ",", "Bf", ",", "Bm"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"hAf", " ", "sAf"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"hBf", " ", "sBf"}]}], ")"}]}], "+", "ef"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Af", ",", "Af", ",", "Bf", ",", "Bm"}], "}"}], ",", 
       RowBox[{"1", "-", 
        RowBox[{"hBf", " ", "sBf"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Am", ",", "Am", ",", "Bf", ",", "Bf"}], "}"}], ",", 
       RowBox[{"1", "-", "sAf"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Af", ",", "Am", ",", "Bf", ",", "Bf"}], "}"}], ",", 
       RowBox[{"1", "-", 
        RowBox[{"hAf", " ", "sAf"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Af", ",", "Af", ",", "Bf", ",", "Bf"}], "}"}], ",", "1"}], 
      "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.666532944052617*^9, 3.666533053166288*^9}, 
   3.666533841677705*^9, 3.673587103673964*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findW", "[", "genotype_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"wlist", ",", "w", ",", "iter"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"wlist", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{"genotype", ",", "Y"}], "]"}], ">", "0"}], ",", "wlistM", 
        ",", "wlistF"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w", "=", "Null"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"iter", "=", "1"}], ",", 
       RowBox[{"iter", "\[LessEqual]", 
        RowBox[{"Length", "[", "wlist", "]"}]}], ",", 
       RowBox[{"iter", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"wlist", "[", 
            RowBox[{"[", "iter", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
          RowBox[{"Sort", "[", "genotype", "]"}]}], ",", 
         RowBox[{"w", "=", 
          RowBox[{
           RowBox[{"wlist", "[", 
            RowBox[{"[", "iter", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "w", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.66653326734863*^9, 3.666533278536707*^9}, {
  3.666533620650381*^9, 3.666533753262147*^9}, {3.6665338084069643`*^9, 
  3.666533860547871*^9}, {3.6665339207858067`*^9, 3.666533962328331*^9}, {
  3.666533992702046*^9, 3.66653400434028*^9}, {3.666554143198284*^9, 
  3.666554149225122*^9}, {3.666554296373123*^9, 3.666554297963922*^9}, {
  3.674222497739827*^9, 3.6742225075382757`*^9}, {3.6742226662802*^9, 
  3.674222674507366*^9}, {3.6742227055889997`*^9, 3.6742227347361107`*^9}, {
  3.674222898533083*^9, 3.67422290119919*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"haplotypes", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"haplotypes", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"findW", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"haplotypes", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"haplotypes", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{
       RowBox[{"Length", "[", "haplotypes", "]"}], "-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "haplotypes", "]"}]}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.673980063507637*^9, 3.673980084579385*^9}, {
  3.673980116904158*^9, 3.673980117080532*^9}, {3.674008631713372*^9, 
  3.67400869576194*^9}, {3.674009901009383*^9, 3.6740099011231623`*^9}, {
  3.674222580862055*^9, 3.6742225843244753`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Af", ",", "Bf", ",", "Af", ",", "Bf"}], "}"}]},
          {"1"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Af", ",", "Bf", ",", "Af", ",", "Bm"}], "}"}]},
          {
           RowBox[{"1", "-", 
            RowBox[{"hBf", " ", "sBf"}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Af", ",", "Bf", ",", "Am", ",", "Bf"}], "}"}]},
          {
           RowBox[{"1", "-", 
            RowBox[{"hAf", " ", "sAf"}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Af", ",", "Bf", ",", "Am", ",", "Bm"}], "}"}]},
          {
           RowBox[{"ef", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"hAf", " ", "sAf"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"hBf", " ", "sBf"}]}], ")"}]}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Af", ",", "Bf", ",", "Y"}], "}"}]},
          {
           RowBox[{
            RowBox[{"4", " ", "em"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "sAm"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "sBm"}], ")"}]}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Af", ",", "Bm", ",", "Af", ",", "Bf"}], "}"}]},
          {
           RowBox[{"1", "-", 
            RowBox[{"hBf", " ", "sBf"}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Af", ",", "Bm", ",", "Af", ",", "Bm"}], "}"}]},
          {
           RowBox[{"1", "-", "sBf"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Af", ",", "Bm", ",", "Am", ",", "Bf"}], "}"}]},
          {
           RowBox[{"ef", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"hAf", " ", "sAf"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"hBf", " ", "sBf"}]}], ")"}]}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Af", ",", "Bm", ",", "Am", ",", "Bm"}], "}"}]},
          {
           RowBox[{
            RowBox[{"2", " ", "ef"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"hAf", " ", "sAf"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "sBf"}], ")"}]}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Af", ",", "Bm", ",", "Y"}], "}"}]},
          {
           RowBox[{"1", "-", "sAm"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Am", ",", "Bf", ",", "Af", ",", "Bf"}], "}"}]},
          {
           RowBox[{"1", "-", 
            RowBox[{"hAf", " ", "sAf"}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Am", ",", "Bf", ",", "Af", ",", "Bm"}], "}"}]},
          {
           RowBox[{"ef", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"hAf", " ", "sAf"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"hBf", " ", "sBf"}]}], ")"}]}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Am", ",", "Bf", ",", "Am", ",", "Bf"}], "}"}]},
          {
           RowBox[{"1", "-", "sAf"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Am", ",", "Bf", ",", "Am", ",", "Bm"}], "}"}]},
          {
           RowBox[{
            RowBox[{"2", " ", "ef"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "sAf"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"hBf", " ", "sBf"}]}], ")"}]}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Am", ",", "Bf", ",", "Y"}], "}"}]},
          {
           RowBox[{"1", "-", "sBm"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Am", ",", "Bm", ",", "Af", ",", "Bf"}], "}"}]},
          {
           RowBox[{"ef", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"hAf", " ", "sAf"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"hBf", " ", "sBf"}]}], ")"}]}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Am", ",", "Bm", ",", "Af", ",", "Bm"}], "}"}]},
          {
           RowBox[{
            RowBox[{"2", " ", "ef"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"hAf", " ", "sAf"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "sBf"}], ")"}]}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Am", ",", "Bm", ",", "Am", ",", "Bf"}], "}"}]},
          {
           RowBox[{
            RowBox[{"2", " ", "ef"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "sAf"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"hBf", " ", "sBf"}]}], ")"}]}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Am", ",", "Bm", ",", "Am", ",", "Bm"}], "}"}]},
          {
           RowBox[{
            RowBox[{"4", " ", "ef"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "sAf"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "sBf"}], ")"}]}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"Am", ",", "Bm", ",", "Y"}], "}"}]},
          {"1"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6739800849720716`*^9, 3.673980117500814*^9, 3.6740086257487288`*^9, {
   3.6740086905547457`*^9, 3.674008696188128*^9}, {3.674009893304439*^9, 
   3.674009901661776*^9}, 3.674038932596085*^9, 3.674222592468643*^9, {
   3.674222728164351*^9, 3.674222741137824*^9}, 3.6743127347329397`*^9, 
   3.674385012084141*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "[", 
   RowBox[{"haploNumMom_", ",", "haploNumDad_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"genotype", ",", "wval"}], "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{
     "count", " ", "the", " ", "total", " ", "numbers", " ", "of", " ", 
      "female", " ", "benefit", " ", "and", " ", "male", " ", "benefit", " ", 
      "alleles"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"genotype", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"haplotypes", "[", 
         RowBox[{"[", "haploNumMom", "]"}], "]"}], ",", 
        RowBox[{"haplotypes", "[", 
         RowBox[{"[", "haploNumDad", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"findW", "[", "genotype", "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6615854483087606`*^9, 3.661585485485189*^9}, {
   3.661585536856962*^9, 3.661585537383308*^9}, {3.661585568549898*^9, 
   3.661585617230585*^9}, {3.661833385703412*^9, 3.6618334314171762`*^9}, 
   3.666530338539061*^9, {3.6665317475800447`*^9, 3.666531767786673*^9}, {
   3.6665318245937023`*^9, 3.666531849319775*^9}, {3.6665318893886223`*^9, 
   3.666531916484638*^9}, {3.6665320231224613`*^9, 3.666532057328471*^9}, {
   3.66653306612834*^9, 3.666533085598796*^9}, {3.6665338733942633`*^9, 
   3.666533899295845*^9}, {3.674222806530828*^9, 3.674222809610601*^9}}],

Cell["Cross Table function", "Text",
 CellChangeTimes->{{3.666534299851852*^9, 3.666534302604281*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"autosomeCross", "[", 
   RowBox[{"haploNumMom_", ",", "haploNumDad_", ",", "haploNumGoal_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "genotype", ",", "haploMom", ",", "haploDad", ",", "haploGoal", ",", 
      "haploNoRec", ",", "haploRec"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"haploMom", "=", 
      RowBox[{"haplotypes", "[", 
       RowBox[{"[", "haploNumMom", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"haploDad", "=", 
      RowBox[{"haplotypes", "[", 
       RowBox[{"[", "haploNumDad", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"haploGoal", "=", 
      RowBox[{"haplotypes", "[", 
       RowBox[{"[", "haploNumGoal", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"haploNoRec", "=", 
      RowBox[{"{", 
       RowBox[{"haploMom", ",", "haploDad"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"haploDad", "\[Equal]", 
        RowBox[{"{", "Y", "}"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{"haploNoRec", ",", "haploGoal"}], "]"}], "/", "2"}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"haploRec", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"haploMom", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"haploDad", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"haploDad", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"haploMom", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Count", "[", 
           RowBox[{"haploNoRec", ",", "haploGoal"}], "]"}], "/", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "r"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"Count", "[", 
           RowBox[{"haploRec", ",", "haploGoal"}], "]"}], "/", "2"}], " ", 
         "r"}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.666534231327179*^9, 3.666534339921123*^9}, {
  3.666534412133884*^9, 3.6665344868934603`*^9}, {3.66653638072961*^9, 
  3.666536516334877*^9}, {3.6735864793765707`*^9, 3.673586482547521*^9}, {
  3.6742228186302233`*^9, 3.6742228768427877`*^9}, {3.674222921218937*^9, 
  3.6742229347466297`*^9}, {3.6742229682639303`*^9, 3.674222968991521*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"autosomeCross", "[", 
     RowBox[{"xi", ",", "xj", ",", "xk"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"xj", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"xk", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6735864203015747`*^9, 3.673586463803253*^9}, {
  3.6742229580833673`*^9, 3.67422296294659*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           FractionBox["1", "2"]},
          {
           FractionBox["1", "2"]},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           FractionBox["1", "2"]},
          {"0"},
          {
           FractionBox["1", "2"]},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           FractionBox[
            RowBox[{"1", "-", "r"}], "2"]},
          {
           FractionBox["r", "2"]},
          {
           FractionBox["r", "2"]},
          {
           FractionBox[
            RowBox[{"1", "-", "r"}], "2"]},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           FractionBox["1", "2"]},
          {"0"},
          {"0"},
          {"0"},
          {
           FractionBox["1", "2"]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           FractionBox["1", "2"]},
          {
           FractionBox["1", "2"]},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           FractionBox["r", "2"]},
          {
           FractionBox[
            RowBox[{"1", "-", "r"}], "2"]},
          {
           FractionBox[
            RowBox[{"1", "-", "r"}], "2"]},
          {
           FractionBox["r", "2"]},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {
           FractionBox["1", "2"]},
          {"0"},
          {
           FractionBox["1", "2"]},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {
           FractionBox["1", "2"]},
          {"0"},
          {"0"},
          {
           FractionBox["1", "2"]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           FractionBox["1", "2"]},
          {"0"},
          {
           FractionBox["1", "2"]},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           FractionBox["r", "2"]},
          {
           FractionBox[
            RowBox[{"1", "-", "r"}], "2"]},
          {
           FractionBox[
            RowBox[{"1", "-", "r"}], "2"]},
          {
           FractionBox["r", "2"]},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {
           FractionBox["1", "2"]},
          {
           FractionBox["1", "2"]},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {
           FractionBox["1", "2"]},
          {"0"},
          {
           FractionBox["1", "2"]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           FractionBox[
            RowBox[{"1", "-", "r"}], "2"]},
          {
           FractionBox["r", "2"]},
          {
           FractionBox["r", "2"]},
          {
           FractionBox[
            RowBox[{"1", "-", "r"}], "2"]},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {
           FractionBox["1", "2"]},
          {"0"},
          {
           FractionBox["1", "2"]},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {
           FractionBox["1", "2"]},
          {
           FractionBox["1", "2"]},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {
           FractionBox["1", "2"]},
          {
           FractionBox["1", "2"]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.673586452773698*^9, 3.673586485897368*^9}, 
   3.6739796806590443`*^9, 3.674009893491518*^9, 3.674038932790667*^9, {
   3.674222963855671*^9, 3.674222970895789*^9}, 3.674312734882543*^9, 
   3.6743850121687717`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Recursions", "Section",
 CellChangeTimes->{{3.6733599968948097`*^9, 3.673359999645541*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ytplus1", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "haploMom", "]"}], 
         RowBox[{"y", "[", "haploDad", "]"}], 
         RowBox[{"w", "[", 
          RowBox[{"haploMom", ",", "haploDad"}], "]"}], 
         RowBox[{"autosomeCross", "[", 
          RowBox[{"haploMom", ",", "haploDad", ",", "haploGoal"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"haploMom", ",", "1", ",", 
          RowBox[{
           RowBox[{"Length", "[", "haplotypes", "]"}], "-", "1"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"haploDad", ",", 
          RowBox[{"{", "5", "}"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"haploGoal", ",", "1", ",", 
        RowBox[{"Length", "[", "haplotypes", "]"}]}], "}"}]}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xtplus1", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "haploMom", "]"}], 
         RowBox[{"y", "[", "haploDad", "]"}], 
         RowBox[{"w", "[", 
          RowBox[{"haploMom", ",", "haploDad"}], "]"}], 
         RowBox[{"autosomeCross", "[", 
          RowBox[{"haploMom", ",", "haploDad", ",", "haploGoal"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"haploMom", ",", "1", ",", 
          RowBox[{
           RowBox[{"Length", "[", "haplotypes", "]"}], "-", "1"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"haploDad", ",", "1", ",", 
          RowBox[{
           RowBox[{"Length", "[", "haplotypes", "]"}], "-", "1"}]}], "}"}]}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"haploGoal", ",", "1", ",", 
        RowBox[{
         RowBox[{"Length", "[", "haplotypes", "]"}], "-", "1"}]}], "}"}]}], 
     "]"}], "//", "Simplify"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6665536990775557`*^9, 3.6665538405203133`*^9}, {
  3.6665538741285467`*^9, 3.66655392822062*^9}, {3.6665540377660217`*^9, 
  3.666554056906703*^9}, {3.674223030342039*^9, 3.6742230631964006`*^9}, {
  3.674223319574006*^9, 3.674223322870286*^9}, {3.674223360110684*^9, 
  3.6742233603245068`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["ytplus1"], "Input",
 CellChangeTimes->{{3.6742230678588676`*^9, 3.6742230697697268`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", "em"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "sAm"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "sBm"}], ")"}]}]}], ")"}], " ", 
    RowBox[{"x", "[", "1", "]"}], " ", 
    RowBox[{"y", "[", "5", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "sAm"}], ")"}], " ", 
    RowBox[{"x", "[", "2", "]"}], " ", 
    RowBox[{"y", "[", "5", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "sBm"}], ")"}], " ", 
    RowBox[{"x", "[", "3", "]"}], " ", 
    RowBox[{"y", "[", "5", "]"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"x", "[", "4", "]"}], " ", 
    RowBox[{"y", "[", "5", "]"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "em"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "sAm"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "sBm"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"x", "[", "1", "]"}]}], "+", 
      RowBox[{"x", "[", "2", "]"}], "-", 
      RowBox[{"sAm", " ", 
       RowBox[{"x", "[", "2", "]"}]}], "+", 
      RowBox[{"x", "[", "3", "]"}], "-", 
      RowBox[{"sBm", " ", 
       RowBox[{"x", "[", "3", "]"}]}], "+", 
      RowBox[{"x", "[", "4", "]"}]}], ")"}], " ", 
    RowBox[{"y", "[", "5", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.674223070228092*^9, 3.674223362998452*^9, 
  3.674312735347948*^9, 3.674385012596952*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wbarM", "=", 
   RowBox[{
    RowBox[{"Total", "[", "ytplus1", "]"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wbarF", "=", 
   RowBox[{
    RowBox[{"Total", "[", "xtplus1", "]"}], "//", "Simplify"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.666554006176744*^9, 3.666554032890904*^9}, {
  3.666554390506019*^9, 3.666554395885975*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "xtplus1", "]"}]], "Input",
 CellChangeTimes->{{3.673361423695129*^9, 3.6733614255920353`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.673361425928624*^9, 3.673426371742681*^9, 3.673585426011228*^9, 
   3.673979681778377*^9, 3.674009894553295*^9, 3.674038933623845*^9, {
   3.674223342527973*^9, 3.6742233648884573`*^9}, 3.674312735468734*^9, 
   3.674385012707452*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["haplotypes"], "Input",
 CellChangeTimes->{{3.673361903554167*^9, 3.6733619114428473`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Af", ",", "Bf"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Af", ",", "Bm"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Am", ",", "Bf"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Am", ",", "Bm"}], "}"}], ",", 
   RowBox[{"{", "Y", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.673361907852754*^9, 3.673361911755836*^9}, 
   3.673426371777348*^9, 3.673585426016252*^9, 3.6739796817817097`*^9, 
   3.674009894582353*^9, 3.674038933664414*^9, 3.674223303068912*^9, {
   3.674223344718233*^9, 3.674223365845254*^9}, 3.674312735509856*^9, 
   3.674385012736273*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical iterations", "Section",
 CellChangeTimes->{{3.674036034178027*^9, 3.674036036288796*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"iterate", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sAfs_", ",", "sAms_", ",", "sBfs_", ",", "sBms_"}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{"hAfs_", ",", "hAms_", ",", "hBfs_", ",", "hBms_"}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{"efs_", ",", "ems_"}], "}"}], ",", 
    RowBox[{"{", "rs_", "}"}], ",", 
    RowBox[{"{", "tend_", "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data", ",", "xk", ",", "yk", ",", "subs", ",", "ti"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "tend"}], "]"}], ",", "9"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0.25", ",", "4"}], "]"}], ",", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0.2", ",", "5"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xk", "=", 
      RowBox[{
       RowBox[{"xtplus1", "/", "wbarF"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sAf", "\[Rule]", "sAfs"}], ",", 
         RowBox[{"sAm", "\[Rule]", "sAms"}], ",", 
         RowBox[{"sBf", "\[Rule]", "sBfs"}], ",", 
         RowBox[{"sBm", "->", "sBms"}], ",", 
         RowBox[{"hAf", "->", "hAfs"}], ",", 
         RowBox[{"hAm", "->", "hAms"}], ",", 
         RowBox[{"hBf", "\[Rule]", "hBfs"}], ",", 
         RowBox[{"hBm", "\[Rule]", "hBms"}], ",", 
         RowBox[{"r", "\[Rule]", "rs"}], ",", 
         RowBox[{"ef", "\[Rule]", "efs"}], ",", 
         RowBox[{"em", "\[Rule]", "ems"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"yk", "=", 
      RowBox[{
       RowBox[{"ytplus1", "/", "wbarM"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sAf", "\[Rule]", "sAfs"}], ",", 
         RowBox[{"sAm", "\[Rule]", "sAms"}], ",", 
         RowBox[{"sBf", "\[Rule]", "sBfs"}], ",", 
         RowBox[{"sBm", "->", "sBms"}], ",", 
         RowBox[{"hAf", "->", "hAfs"}], ",", 
         RowBox[{"hAm", "->", "hAms"}], ",", 
         RowBox[{"hBf", "\[Rule]", "hBfs"}], ",", 
         RowBox[{"hBm", "\[Rule]", "hBms"}], ",", 
         RowBox[{"r", "\[Rule]", "rs"}], ",", 
         RowBox[{"ef", "\[Rule]", "efs"}], ",", 
         RowBox[{"em", "\[Rule]", "ems"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"ti", "=", "2"}], ",", 
       RowBox[{"ti", "\[LessEqual]", "tend"}], ",", 
       RowBox[{"ti", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"subs", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", "xj", "]"}], "\[Rule]", 
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{"xj", ",", 
                  RowBox[{"ti", "-", "1"}]}], "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"y", "[", "xj", "]"}], "\[Rule]", 
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"xj", "+", "4"}], ",", 
                  RowBox[{"ti", "-", "1"}]}], "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"xj", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "ti"}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"xk", ",", "yk"}], "]"}], "/.", "subs"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "data", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6740360383201237`*^9, 3.6740360898411503`*^9}, {
  3.6740361251682873`*^9, 3.67403618087683*^9}, {3.674036244147202*^9, 
  3.674036245147655*^9}, {3.674037015613989*^9, 3.6740370291660748`*^9}, {
  3.674037082595573*^9, 3.674037334754385*^9}, {3.67403790771581*^9, 
  3.674037987989828*^9}, {3.674038047986264*^9, 3.674038080651442*^9}, {
  3.6740381179431458`*^9, 3.674038138333129*^9}, {3.674038196223803*^9, 
  3.6740382776174393`*^9}, {3.674038420647987*^9, 3.6740384584293756`*^9}, {
  3.674038574353747*^9, 3.6740385767940598`*^9}, {3.674038639937949*^9, 
  3.674038687567933*^9}, {3.6740387331622963`*^9, 3.6740387528336763`*^9}, {
  3.674038851041184*^9, 3.674038851235203*^9}, {3.674038959275943*^9, 
  3.674038959664154*^9}, {3.674039000350132*^9, 3.674039036742201*^9}, {
  3.674042742469171*^9, 3.674042742935413*^9}, {3.674223369494837*^9, 
  3.674223393804178*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"out", "=", 
   RowBox[{"iterate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.2", ",", "0.4", ",", "0.2", ",", "0.4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", "0.5", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "0.05", "}"}], ",", 
     RowBox[{"{", "1000", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.674036247332053*^9, 3.674036262962175*^9}, {
   3.674036587033845*^9, 3.674036587465865*^9}, {3.674036990654313*^9, 
   3.674037008574046*^9}, {3.6740384500867567`*^9, 3.674038463859119*^9}, {
   3.6740389678310347`*^9, 3.674038971193698*^9}, {3.6740390485764503`*^9, 
   3.674039069646428*^9}, {3.674039101995667*^9, 3.674039103465249*^9}, {
   3.674039194466893*^9, 3.674039195732361*^9}, {3.674042715245906*^9, 
   3.674042718022314*^9}, {3.674103550501935*^9, 3.674103559306768*^9}, {
   3.674106426229694*^9, 3.674106433830627*^9}, {3.674106518072105*^9, 
   3.674106519469117*^9}, {3.674106583516583*^9, 3.674106586461981*^9}, 
   3.674106816656562*^9, {3.674107902672903*^9, 3.674107952284369*^9}, {
   3.6741087152483797`*^9, 3.674108730150445*^9}, {3.67410921195234*^9, 
   3.674109218168256*^9}, {3.6741092694735603`*^9, 3.6741092866916313`*^9}, {
   3.674109912119401*^9, 3.6741099615849333`*^9}, {3.6742234748417597`*^9, 
   3.6742234769935007`*^9}, {3.6743127544765244`*^9, 3.674312764846898*^9}, {
   3.674313097897657*^9, 3.6743131033735847`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"out", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67403898033904*^9, 3.674038982642663*^9}, {
  3.674039057337543*^9, 3.674039061047721*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJwtl3c4Ffz/hymFpqioVBpaGmgR5aWI0kBkpOw9svc45xjn4Fhlt0SJhkcp
lIaKUCotaaskDRGpVOrn+/u8n3+67uvjfV7ndj/Pc13NsNtt7DhERESkY6iI
yP/+ZP90a7E/m+hPEbTzdW9WP7hHLIGItZ0bR4rcIZbC+buLriCukXg83ENq
Vg4ENhDL4Z+lwagiwzpieYi3uJ+1FKklVoDSCnfv4IFrxDOhp/Vxi7TMVeLZ
8FF5kF976jLxHAh7J4XeCK0ingfT7mRf9z2VxAvwPOfAld7P54gX4t2l0bVP
+GXEi9FnG7JAZtdpYmVk6r6qkn9cQqyCPznLJU+anSBWRe7LIRXhy4uIl2KX
2fordi5HiZchO3L1gcKOfOLlaCopOfmnJI94BQYuVN5Xcj1AvBJa7je2oz2H
WA2x8yTOpDRkEqvj1fkrSm4S6cSrsGZfWsjYnDRiDdimdlxd/y6ZWBNcw7t+
2pMTiVcDc1YIM6/xiddAqDFMfu29GGItDNlYZpa1ikcMrIn4EKjXEcWYAziX
a7vP+RBG79p4ZpZhoeQcTO/aqFibs1i4LYDe18KrqD12zmFfel+LvQOHzpjo
eNP7Orz5kxcldPSg93X4U9NVWHHDhd510DVcvWDUfkd610Heh51zjR/b0bsu
VBb8G/bX3YbedeEhmiOQPGhF7+uxkeekbdVpTu/rUXlKZsPzs6b0rger2HHl
Me+M6V0Ptk9/ZSv6GtK7Pl6tyBVYHNxE7/rI6G70/9CmT+8bwJuWsl61UJfe
N2CYjK133v219L4R4n8naqVZgd43Qnb0h4GF3pr0boDc5sN2vHNq9G6AuNLA
ie8Cl9P7Jjg3npB2PKJK75vwvvz8l4nKyvS+GU2X9NyOTVlI75sxUn/TdxGn
efS+BQf/6RadX6hI71uQ19R9tMR6Jr1vhcjOk4IDr6fT+1Y0Nnlq/3dsCr0b
QiMzfuiKP7KMYYiBB7eHZjWOp583xMQijvYhCWnG1YY42/jrnqvOWLo3Qneb
QElx8ki6N4LMhBFhEyPE6d4IkafXOJ6wFKP7wZ/XvZ57KV+U7o3xSUHucGzy
3zXs3hh+swMfjg7+xZhjjCN1P6e9/PydcbUx4rcrTol/2stYZBuWjf8nPVrl
K91vw5q1EjnDazvpfhsO2XcEldV+oPtt0EqesVdpazvdm6D5lGDYmq1v6d4E
NU7uzjPKW+neBOkclynrPz+nexO0PNuz5+rwJ3RvCttZL3Jkjz2ie1M4JKbK
Olfdp3tTLMwfKr1kWRPdmyIzpeTmH/FGut+Onp9zBnasqaf77VixqDVc/0cN
3W/HKZevRzHjGt1vh1z59X4Vyyt0bwbb0a6pFlOq6N4M1bvCdVV3V9C9GfIz
Xm8dsvYs3ZtBsC523Fneabo3x4g5vwZ+6JTQvTn4I9w6x88/TvfmqJy05lPK
vkK6N4fjloKsZfEFdG+BNA2Htfav8+jeAs5ZyyV8lA7QvQVyT/DUuEtz6N4C
mX43RrjVZtC9JezPz78Ze2cP3VsiIf256Zk1qXRviSXZaY59Y4V0bwnvOk2z
bE0B3e/ApOO7P7l9iaH7HUiacW7EThke3e9A176FRw6tjKL7HfDPOn+C9y2U
7q2waYWCo/j6ILq3wo/VYg9+y/rTvRVCRuj4fTT3oXsrHFTfpxfU60n3O+G3
YEds3VNXut+JDf2yxWpGTnS/E8nWU7w2r7On+50YJVy6eHGeDd3vQn6aiUbu
GSu634WA+uyHi2rM6X4XvqiMm2NlbUr3u5AknTHa2seY7q1x1/j5goEHW+ne
Ggtstxt4BxrQvTXuyAUFvD2tR/fWmJZoIbbbR4fubZDrtvOzWIE2YwUb9L6y
HjrFaw19ng3ibP45z8IqxjY2MFwm+ez1kRX0+TZQa8wQWytYyjjPBoptUoWd
Lcq0Z4NzfVqPn4xdxLjVBsYHqiKPSc2nfVtcsBUr/3ZAkfZtcbhk6qyoIzNp
3xbq3+r+Fsoo0L4tTvqr9ipemEL7tpi6aYfl1Q5Z2rdFmllXw5UD42nfFmff
VySU3BhH+7bY3V+qpHNsDO3bQX6N/vQqzxG0b4fH77pKRjUMp307JOg+GlNz
ZCjt26H3xvGuVV0itG+H8XI1yl6qA6vZvh2GLBjTvkCpn3G1HW4+XOsleqaP
casdrmncWulQ1sNYxB5v5wY6B0zrZqxgj64pRpJGDZ8Ywx52aRbT3/S8Z2xj
D7VZNeE/C9oYc+zhk7fhTEfDa9q3x9QXv/epFL+kfXvM/5Avt8njKe3bw6TW
vnlRbTPtO8B0auPTJYce0L4DnAIll0R3NNG+A2o6LIQ5s27TvgPSdfPXHpzS
QPsOKLKUOaSVX0v7DtA698n4TsE12neAoCLymtHYatp3QOned9cNT1bRviM0
zsnvdntcQfuOEH1h5a6ScJb2HWGptaeq/fRp2nfE6le/ja6Hl9C+I1bOzPrh
su447TtieFwJv+pQIe074uLCDV0SEQW074jjm81bQhvyaN8Js1q7fOw/7ad9
J/Qkr8941pFN+05wqF3zj++fQftO6PXWy7sQuof2ndCouuXW74cptO+EvMyr
cq5uibTvBIu4lN1J+/m074QZsfLdZ01jaN8ZeqdeWi6M5tK+M47u1y09NT+S
9p2hnxN8/0h/CO07o+/Hzt9GuwJp3xm/N69+LrfOj/adsX5MdOXKTG/ad4bG
sfWlNaketO+MA6qVrY+yXWjfBadspip9WeRI+y5oyr45KVLTjvZdoNvqrmnu
bE37Lqg1WiT6QXIH7bvg9qoZKqf0zGjfBSo/F/VMHmlC+y6YaDGi74i2Ee0P
3hvoyh4u30z7rsgMOn33bPoG2neFgcqlH3eHrad9V9TOmxzK71tL+64YZlmW
omsM2neFrdkC+5uTNGnfFXuCS7vLldVo3xVDAh1+PLm/jPZd8cZzqPSzzyq0
7waZmBrJWc8X074bWo8/PbEhdQHtu4G/JFoz4MUc2nfD+jwxrnXJLNp3g6TT
k1fl3Qq07waTDTqlbvOn0r4b3mfLTRBOmkT7bogVXjjglTuB9t3x/c8lla4s
adp3x9J9sywrRKRo3x1WUw65lSWOpH139D3ZGvzzrDjtu+PkriPP5J3FaN8d
a3N+B8qkiNK+Oyo/tSl8UvuryfYHP99XfPSGIb8Yi3hgns3TVV9tvzNW8MCX
N1PmfV/byxgesN76+eW2vd2MbTxw6uOjFCn+Z8YcD9j6WDT4CTsY53nghkNj
26Pp7xhXe0BN2j7Ia9Eb2vfAaYNlgR76r2jfE+3eh19LfnpK+56Yqdh/O2T+
Y9r3xK2r1lFiXx7Qvid89owt+ql4j/Y9MWVp4rIo3m3a90SxxuseEYcG2vdE
C7e5OK+llvY9odJvefXprWu074XK1YEc8YXVtO+FNC0dzY8PqmjfC3c1zoop
fK2gfS8IRTaEL845S/teWJ45d2xF5Wna94LF49ZRUyNLaN8LSnqL7M5rHKd9
L+yZ/vTLnrRC2t+NyuJr393cCmh/N7wflW3rL8uj/d0Ym1fsPuzSftrfjbAh
nlq/K7NpfzeaFepmCHQyaH83JipdWJ5nsIf2d2P3W0dP8dAU2t8Nq3LppeUy
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
U/8UXFgjIetx3pL6D36+/PT5O3u3q/4fsVsGJw==
      "]]}, 
    {RGBColor[0.6, 0.24, 0.4428931686004542], LineBox[CompressedData["
1:eJw1l3k41H37v1VI2qRE2iSVJRIJqbxISilkj6xZso59ZwaDYYy0Uopo0V5E
2u4olSJpV0pEUhFSRNvX7/e5nvufjvN4d81rzjmP5z7uZ55b4BaP0UJCQp1j
hIT+35/MP736zJ8N9KcQpiuNMbvc8YhYDDtitZonGvyPJRAUNSbvgOP/eBrc
5ynNE99dTywDgzs1LVyt//EspD8xPH/G6yGxHPR02BfLy+qI5aEp3SJ37Gkt
sQIk70fdH+59QLwQfR2OPw2G7hMrIuqWbpnk7xpiZYyXXqAmMnCPeDHkNp08
8KfrLrEakpeWNrxrvUOsjouxTYr7X1YTL8UaOe66s49uE2vg9NDths+1t4g1
Udx+7HLOwyriZXjnmjvw9nklsRbev+qI1am9SbwcM7MTFSb/ukGsDe670Nfr
Vl4n1sHEFMuUvKyrxLqYWla/j/2jgngFwmdMXLI44DKxHmLk868dHSojXonC
iudBd/ZfIl6F+GVXCo3XlxKvRpeHi121eAmxPiQ7SmSqmy8QA2x/3zchqecZ
ZgNrFs2PmxF8lt4NUGwRKLws9jS9G4BjHtkYdPQkvRui83LEguhPJ+jdEIaV
Szf1mRyn9zUoWi2XHVt9lN7XYLTyHYk7tkX0boSIAWPN6NGF9G6EBGeJbMvb
BfS+FkvOPHmnoJFP72vBNyy7LSJyiN6Nocf2UR76fYDejSHUtbv6rnQuva9D
yvaYNWaW++l9HfbJdpzkn91L7+vxzMXXYpfCHnpfj84YpxJ++S56N8HxhTbD
la7Z9G6C6fv3x/AVdtL7BrhuXP373nAmvW/AvyDz/mPPM+h9IzYsexH34wWP
3jciYwVPef7vVHo3hf9hncLbhin0bopzuXoPs4uT6X0TJC19Bv1Ukuh9E0Ju
uw3a3OfQ+2aEbO9xDGaz6X0zZptrWI46HE/vZug/nKhS5RlL72aIuTmzRsYu
mt7NsfFrX5p6YCTDMMe156+yXE+G0983h76I8AMN4TCGK83x4IXdLJu4ELq3
QNez5pJjksF0b4F23Z/B826x6N4ChjLf5r6aGkj3FrhcdzlxX4Mf3W/BnB1b
NQ0u+9D9FiRNXjPcWO1N91tgd8Ddf/eAJ91vgabZBOtGEw+6t0Sv/Kv1q6+7
070lzKwUElM3utG9JY5aerce/uFC95ZI3PF7nXKQM91bwezGtqyVC7bRvRXO
r9XSnCPsQPdWaLwm/aZM3J7urSBVc+WP/HJburdG2gKnN1eSrOneGprns178
67Wke2vwjgv1nIjZQvfW+K2SuytrngXd26Cg7J1qRJUZ3dvgeJB606mATXRv
g2dpd6ZYrNtI9zY4M7n0rf56E7q3heiXtq+pAevo3haOYRqerMtr6d4Wpya8
6A6WM6J7Wxy+KS2jc8KQ7u0QPybr324TA7q3Q2xIsEKSCOjeDsZyBSJmJavo
3g5mh9OuZXD16N4eBYsmR6ZwdOneHjkf6hTWFmnTvT1YEh+WinRq0b09DNnv
srQ3LaP7rfC9saM/tkGD7rdibnfttsLApXS/FSrtOh8OKarT/VaYTvrMku5X
pXsHlLiuKrWpUqF7B8TctZe5WqFE9w5oOPy7ffWLRXTvgJ4pi87LSi+ke0es
Tty/5nKkAt07IrbR6+W5n/J074iWL/bsmj3z6N4RuHbj6/cNcnS/Ddy3QTX7
NObQ/TacXD3j7sTfM+l+Gx5I8+eP7ZlB99vwWFk+P1JMhu6d8PmZ+Zeda6fT
vRO05+lzS4um0b0TXNL+NIbKTaV7J1SnVJ7dd2UK3TvD9lD7M2F/Cbp3hurH
atWjQZPo3hnqVp6lPssn0L0z8j70/Jy4QJzuXVCzQfx+7AoxhuVcIGUTxHoX
Ikqf5wI7U37a7nphhl1ccED0loTi+jH0+S6IGa5tsG8exXCBC77eKPs7OUuI
9lzA7tJYV3Lh7+r/zy0usL0tHtbA+s2wkCsk8/eLKzgMMyznCv2Kgwv3+v1k
GK44tkCre23hAMMurpi1XGi9YOg7w2xX7LF++WMwsJ/hAlfM+OvUvmLMN4Yr
XVFS/fOh7sVe2nfFtZQVan97vtK+Gw4Jf68LOd1F+26YsWLSx/Dsz7TvhjLH
pZM/He6kfTdMnRDm0NHQQftuaGY9nVml8IH23bBO71/Ln/1ttO+GhZ5XH5op
vqd9NwSV66rufdpC++4YPThxd/GSd7Tvjl/OHsOsjje0747JR4YH59S8pn13
FE9vz8t83Ej77ji4L3Doyb8XtO+Ov3+NH+iZP6d9d8xMPRe+rvIp7btjk2qX
/dFNT2h/O6Z12mxZPNBA+9sx/2nHvNuBj2h/O1Tv3jN5Oe8h7W/HtnPZsUr/
HtD+dhg7iJoIhO/T/nY4Vi2qkFpyj/a3Q89Wp0809g7tb4f+dO6SN523ad8D
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
      "]]}, 
    {RGBColor[0.6, 0.5470136627990908, 0.24], LineBox[CompressedData["
1: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
daH+adCYFp7f1e9E/dPgu3TxzONRjtQ/DZOzJGUfyjpQ/zSw4k7X3rhtR/3T
cPHWg+xxXrup/6jvJTXbn7rW1D8NIh7phU4bLKl/GoI0x0oYeeyi/mlQ+CL9
deSyGfVPw2zJBSJN0jupfzqOC8lK7jtuQv3ToTDlztSBDTuofzp4AnLfPv0z
ov7peD9hxXWP09uofzp29n5c1Be5lfqnI00wXUEnzID6p+PeB9PtdjmbqH86
fsQLreI2b6T+6dgjOCt2vp4e9U/H7fntf+sf6FL/dPwWMFN2cdOh/ulY2DL2
W60sqH86Op+ueLOlYz31T8ehF94vrErWUv90eKYpL+Gd06T+6ShZv2BV/cPV
1D8dfmPv9HhOVKf+6ch+963ops8q6p8OduduH4dvK6l/Ojj5IjNl+SrUPx1q
luydn3WUqX86Qix2fS+cr0T907Hv9UUzzW5F6p+Ozw1TI9a1LqX+6Uj/LJhZ
OLKE+qfjY8r4F+c1FlP/0ffBw9svZC2k/ulQnP5AUFtiAfVPR62njvnCS/Op
fzr4jn+vGDjJUv90LE5ZP4lrN5f6p+PFteCs1EUy1D8DaT6Jv60lpKl/BhZ6
LFVpV5Si/hm4embGya2uM6l/BtJro4W/35lB/TPAt8tz9l43nfpn4EBSVlJg
gzj1z4DxUpHD3xLEqH8GXMV4C1qPTqH+GTBy9+OZ2U3S/D/Gcv5p
      "]]}, 
    {RGBColor[0.24, 0.6, 0.33692049419863584`], LineBox[CompressedData["
1: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
IjLmPrVIdWAiPn7JtVd1aCK6lTx251V1fxJWb5zcT7VxEqZe8ThUYxJODG7l
VW2bhLWt79qv2vn3+1e7m1V7JiFr5jvtrqn7k9Dx80X9VIcm4UyrGyaqluzY
FL5zpmqjHXGB8ArVsOPP2vJNqm12DNi3co9qpx29juyqUu2xo/u1Uc3avh1D
vxx/13V1345pT97YVrWUhrlfJnRRbUzDPnk6VCMNb9S+OUS1LQ1bbpufoNqZ
hg0xSyap9qTBvHtHjupAGrrVGadq+2lYecA/W9tPR61v6UJtPx0T/X+8p+2n
Y0nH0hXafjrKLQs/0fbT8Wz5Q19q++kobtVlvbafjoHyXr+2n44u7W/dou1P
xtHqI9u1/ckob3rtR21/MhJrp/+s7U/G11LCbm1/Ms5Wnt2r7U/G7T8+/5u2
Pxk71g34Q9ufjE2PGg9p+xnoP3bbX9p+Bsqf63JU289AS2vucW0/A/Puf+uk
tp+BcW+XVGn7GXjjk/6ntf0MnL3h4hltPwPFD06t1vanYDXOntP2p+Dq/J7n
tf0paNXsiGj7U7ApcekFbX8KJiavvqjtT0HtslW12v4U7HLOq9P2p+CRlOR6
bT8T0pzHL2n7magxHNeMTJy4Z8FlbT8TG+d3atD2M7E8batmTyZWTe/fqO1n
4ocVP2gOZaL7692btP0sTP3lE83GLIx84rYr2n4Wvn7SrtmWhc3jtmh2ZmFI
zzubtf0s3NLHqjmQhW8PLtUcykLfyYc0SzIuDbv/qmqDDJx+RbNRRrfXnZrN
MkLj12iGjL+CBzVbZHhb3nhN+3llXLOZNMsyXqwdqNkp47vmdM1uGfd+6dLs
kdHbvEqzT4ZpzWbNARnLXz2gOShj/TNnNYdkVE27rjkiI2lwy+tafzaa/e01
G7Kx8q+umo3ZePnAS5rN2XhwvUUzsrFxXqJmSza65qdptmXj+Wl5muVsPOaf
ptmZjS5PuzS7s5HU5NbsyUbFQ+9r9mUjz+vRHMjGBx9/qjmYjaVtvtIcysbd
xg2aI9kIr9kk9OfA9vsWoT8HbZZ/J/TnoPttFUJ/DgZ02CX05+C1i7uF/hy0
duwT+nOw7ZvfhP4cdNz+h9Cfgx0LDwn9OdhlOiL05+Cet48K/Tl4YtdxoT8H
9sMnhf4cHP6xSujPwegFp4X+HMzpelboz8W+TdVCfy6mt68R+nOxNue80J+L
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
eseQDeRYspFsIpvJcWRo/j+F0aHy
      "]]}, 
    {RGBColor[0.24, 0.3531726744018182, 0.6], LineBox[CompressedData["
1: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
9+cPMI6KR21+/p2y7d8YJw1/X52GL9qe/YzT4nG42rjz0+AnxtnxCM5LsuRf
7WacH4+l/rfLJ8/oYlwcD4cpzwzH/HnDuCIeP/u4bvVb2hlXx2O2S0XMO4EX
jOuG74v23jwl0sq4cZj/rqwyzHvCuDUeJYrnxtVcaWLcHo80gZpwFd8HjD8M
/55PD/T1Kdxl3Pf/zy8IWuJXy3gwHhVLt7oPbrrJWCABsv8GKt2SqxmPS0C6
+bHT932uMBZPAD9l/tx37hWMJROwb4T5lzV/LzKWToDu5qwwe8ESxvIJOHg2
tdB+oIixcgIuefabCaedZayZgF1zvAIut5xmjAQUX4oukM/KZayfgN+twWby
rdmMDRLw7MWto9GfjzI2ScCszYlG5a1pjM0S4Nj7TDfR+AhjuwRs/mVkp2WY
zNgtAQ8+jP93zD+RsV8Cjsy/Nee5YCz1T8DN3EKx6+qR1D8BvRnCwZlfwqh/
Apb6npnyfTaX+g9/vx+hQTJ2wdQ/AbUxC9ZJr/an/sM+aaWnNIu9qX8CZl+q
adTM9qD+CahqzdJ5NuRK/RNQ4L6qxNbfkfonwPv3j2Kk2VL/BDw6pupirGdF
/RPwvXfe0ec25tQ/AZn8AI+st/upfwI66gp/K5zbTf0TkJeVPnu9sDH1T8D8
h87d9p93UP9E3DhpN19C14D6J+LgRd3Kit5N1D8RBjXCPet+r6f+iZDrPjHH
NG0N9U9E3lGBuvbzq6l/Ii7e2VQ/xnwl9U9EW1HqoWdTtah/IjYmb79bbatO
/RPx4+eL/kcrlqr+D1ZMCcQ=
      "]]}, 
    {RGBColor[0.6, 0.24, 0.5632658430022722], LineBox[CompressedData["
1:eJw1kXc81f3/h0VGSYluaRsNRSVkhmfSJCEiKzvJ3ts5zjEO5xy0h6QhWlIS
qURoaKkkVCqlSNLe+Pk+Pq/f/U+P6357nee5zqXsGWzrIyoiItItJiLyv3+Z
/z6Z7tv7v/9umdL/APNPNbEUNt2NME+o/X+WRXlv2P4RhZeJJ8Ck2H3waPj/
syL+GtdUqL6vIp4K18KSJYqK/89KyLsRr7L9XiWxCiZYTBryuFJBPBNeihsF
XpkXiGcjZJbvhoIt5cRqeKi0b/ti8/PE8/AnJmPGc7UyYg30mJm3fJE7R7wA
ARNVGuolzhJrotVr2aI2sVLiRfA8s0p00sQSYi1M9bSxl1xyilgbm6ftGL8y
+gSxDjJ6tFldN4uJF+O6MOlWq2YRsS7sCmysb5cUEuvBPjTgkLnZUWJ9lMXq
Tih6f5jYAKIOaleNiw4RG+Lsqh8uS6MLiI3wOLN3XXVZPvES1O9p5cfl5REb
Qycn79TAsX3EJrCL29YteLCH2BQ70456RE3eTQyUHKt/Npq1k2EWUHvs4YET
IjvofSk4nrNZ1/Zto/el0MlIirhnmUvvZjj+0ofl9F8OvZtBb//YsxJvBfS+
DPUJCXZ9N7PofRlez+tZ87aJR+/miBjrdzznbzq9m8N+0ekDp1ak0ftyVK80
2z25lEvvyzHhyMnl7Ys59L4CI76fjx7Vwqb3Fdi9uLqrU8ii95XQl2x/Hnsl
id5XwlZ58kHZjAR6X4XCBYtPHoiLo/dVsNC5usB7Wwy9r8bacxvdmu9E0ftq
5KiLDmTMiaT3NXDtv/jNvCCc3tdg5QL5kZ91wujdAv0lASl7X4fQuwWmt8rG
tNoF07slTrA23A0YF0jvlnj1ZZpbw1d/el+LZEdUfxz0o/e1aPHmGsxdsJne
rbA6fTm7K8mH3q0wTUeUV/vRi97XYeoz95zUeE96X4c6bbmNyqoe9G6N8Ofl
MutvbGIY1hgf/XvdiShX+vvhdxvHmz+snRmusUaaenyByvqNdG+D8jn+t9bF
OdC9DZSmtsxrrrOnextU7BwxXne+Hd3bQM3wyWO187Z0bws5YUstb4MN3dsi
zjJf2VXOmu6HedHPSbtvr6V7W8hulblokm9B9+shL/JpJ3fvarpfjyuckclR
VSvpfj2kTZYlOg4up/v16N3wcqDA05zu7bD2iLfp9zdmdG+Hm9/aB2ZxltK9
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
/X4s3KmpyWAZmTC8ioXkn4d+qY9cQr8nC2tc7l8I/GHAsCMLMuxqJ4Nx+vT7
suDw+UrpJQtdhv1YuMALzdhwXId+bxY4v4Ye5M3SZjiGhY4yjZHrqhfR789C
eL/4dYdQTYYzWBhq8y7JjV1APViI6M/2LjXWYHgPCytEHt2qUp9HfViYbx6t
nQ81hotZMCmTPcSOnU29WFgS5pZS+2gmw5UsOP1IvNNrqUr9WLC3K3C83KnM
8E0WFlh2pE3arkQ9WWhmb4RK5XSGW1koGjrUdSJ6KvUd/v1VFNZEekxmuJsF
w7Tf4X5hitSbBa9A48zCIgWGf7FglFuWyxmcQP3ZaOLpxmVFyFN/NlRX9UZG
SMpRfzYmzpm/U6lclvqzIS+mb679cyz1ZyPV0zxo6rkx1J+NpQ2mivm7R1N/
NsQEER/2HJWi/mycLdGcr9YiQf3ZKJ5usOXAXHHqz8a97y2shDwx6s/GyNs7
v0driFJ/NoT7DZIDn4hQfzZGV56rbdAdMmL6s3FR7PEX8b5/DIewsVm1XkH3
3h+GY9jQEK8L0nzyi2EWG9GKXpajxX8ynMHGOpfZV8bZf2c4hw3Pg+7pV+u/
Mrxn2MfSK+yGzReGC9jY+DyoWeTPJ4aL2VDauPdae1Q/w6VsfEks2uKn1sdw
JRvpbt1zTcR7Ga5hoyQ46N7C0T0M32QjLevZSUuddww3seGRPnPZU1YXw61s
SN9U17Xve83wSzbyv9lleEV3Mtw9/P1z3GY9nfqK4U9srLB7bhte8YLhX8O9
lUbdNvd+zrBICsqMrutVLHnKsFQKzHade7nbuI1h2RS8cNYb/8nrCcOKKRi8
b3NO5PRjhpVSsH/te10ThWaG1VIgs/hUs+WBhwxrpqBlZp3YgOkDhvVTgPm7
WDm/7jOMFEwfMh+fV3CX4VUpWNC1Tu1wxG2GrVMgLslO2BJ6i2HHFLzNPLLs
+/YbDLunoHuDeR2rrYH6p6A++IROvGk99U/BXfu+75y6a9Q/BQsNUkQ3e9VS
/xSkfRUtmTSthvqnwE28WD/4+RXqnwLt8+u7hk5dov4pmL+bG1dYeJH6p2Cp
1Htp1/oK6p+C5YtkNF0kLlD/FKzd3/Z0zJbz1D8FnmM7s0a9P0f9U1A+VFI+
Kf0s9U/BxEv34heYlFL/FJQopppenVxC/VOwTZTl9KDrJPVPwZ8PM8st249T
/xS4/w7WUfteRP1TUBxmdH679jHqn4JxRivbv247Sv054Crn6XXIHqH+HPw7
zj/338lD1J8D5XwRnfRNBdSfA2MTg9kCx3zqz8HskZsjJ87Io/4cfJbNlHIf
t4/6c3BZ0pDnMHsP9edghfGLMWoeu6g/B6eFc15oXtlB/TngDUbvF9XfTv05
+Niak+18P5f6c2B/XcJzJjuH+nOgdnthf9suIfXnYE5xyqxHjnzqz4GTRIHt
S/NM6s9BX3n/k16HDOrPQXwr/9ek7DTqz4F6usL++ndc6s+Bhd8M5+hNHOrP
Qed43ze9X9nUnwOzA4HbJI6wqD8Hg3lv8489TqL+HESl6LuIb0+g/sOfv3Vy
+L24OOo//Ptf6ujv4sVQfw4K727S878SRf05cD0+ueaMXCT15yBWmT/FOD2c
+nPQqP9x9Q3FMOrPgbRip+2ChhDqz8Ffpy9G3yYEU38ORK88H3PmbgD15yJw
RoyF+ll/6s9Fx+bBQysu+1F/LoKlBzMnffCl/lys+VE04quxD/Xnwid/NMfu
jBf15yJg3HKnj8ae1J+LS5I6Wnnv3Kk/Fz1XRe/X2W2i/lyoj7+k8UDKlfpz
IflN4urPd07Un4vn0l9rxvY7Uv/h7zNu/wW1KQ7Un4vEtsMTsrfYU38unC4v
Mah+sp76c1F78Vqph5ct9eciMsixxnq0DfXnov3DW0+FneuoPxfet2TLAszX
Un8uDDzendOZYUH9uSj2H69sqrKa+nOxReFv0p41K6k/F5uneZ3h7lxO/blg
J019FydiTv25SFg52KPMM6P+XKxr2yq0nL+U+nNRVZ87su+xKfXn4kvj5L0p
LGPqz0W2uezY1xuMqP+wzyLPPa32BtSfix+2USe2xOlRfy7qui7wmmsXU38u
QpsGdbPm6lD/VNwxazqy8IwW9U+F0tXzC3KsF1H/VESoZXscldak/sPvxRPa
5a/Mp/6pKDlme1EsW536p4IdVTj4lDeX+qeid94/kQMn5lD/VKiWdrkkf5xF
/VPharWrud92JvVPhZ25fWLWYxXqnwqFN4U6UyOUqf/w309877BTQ4n6p+JY
lXG48p9p1D8VdRmuB3ffmEL9h7+v6Yb5a6onUf9ULI9XsNR+OpH6p6LQqex1
6hQF6p+KQbkfAccTJlD/VMTxPyno/pOj/qkwuvZS5/Pu8dQ/FePFFPpvrZWl
/qnIWfHc65TeWOqfivqLtacOioyh/qmYIlMypPp1FPVPxYvODxvmj5Gi/ql4
ounV3r1KgvqnwjRrR0nlsZHUPxVih63kNFXFqH8qPv7Qaxh3eQT1T8WNke/P
mgWLUP9UFBWuOF0eOWjI9E/F/rLv96ca/mNYJA0O4cW2/mp/GJZKwzv5VR+z
jH8xLJuGvsGqweKoHwwrpqFindXq6Q++MayUhgk/NsvFrfnKsFoa1pefTYh5
+ZlhzTSEmzppiOR+Ylg/DR7xz21Nzn9kGGkwYm38PS7iA8Or0nD9rIT4dLf3
DFsPf77GzpfrgrsZdkyDlrqE7I2jbxl2T8MfsS0f2/++YdgvDfkCzqUJYa8Z
DknDPePMr+rinQzHpOGnWlyvaNlLhllp8Ps8yWnl1w6GM9Jw7JjhlLiSZwzn
pOGB4/qfpjvaGd6ThvvyPQOxh1oZLkjDh8eK95c9amG4OA0PjXZZ989+zHBp
GkxLDcpE9j1iuDINPCfdunnzHjJckwbR1qREi8dNDN8c/rx//MYHWvcZbhr2
V2qd69Jzh+HWNOh+65J+0NjI8Ms0aL8RU5Ruvslwdxp2DdkOzhC9wfCnNHj5
/lB1sW2g/mkoyosqMLlWR/3TIf/KJy1y3TXqn47TG2pD23/WUP90HD315nRH
2FXqnw59e98pFTOvUP90bL7ydvbDEZeofzqm2NmJjpS8SP3Tcbj8iIfLogrq
nw6Xq1OmqySVU/908M0S1e+/L6P+w59vINE2JvIc9U9H2+8ax9LJZ6l/Oi4k
fxoXXHaG+qejVFW+O8v9NPVPx0572wXmBiepfzo0Nf7m+hgep/7puLKcX/3b
vYj6p2PmCpkfS08UUv90aIm+Hzgnf5T6p6On29zx877D1D8dzldm1d81PkT9
0xHWUDjI+XaQ+qejpHdU5tO8A9Q/HXrpA6PUQvdT/3SIXLt3QDNoL/VPR260
6rNfObupfzpUL632vtyyk/qnIz+0/Nr7JTuofzpiZm07rFq7jfqnQ7Lw2gpt
j1zqP9xTTG75uCk51D8dMseiB461Cah/OhLG7T2SdDyL+mfAOc5t0Ocwj/pn
YOldRY5TbTr1z8CcI40q28TSqH8GwufozY725VL/DIz1P+Jw9F0K9c/AdpU9
Ea+4bOqfgbAql84ZS1jUPwOlotnoV0ii/hlwCy5/u6oznvpnoNb2h0DiSSz1
zwCvsSJxxpdo6p8BWRvJvjrNKOqfgewstRbHnAjqn4Eo+SjFiLHh1D8DEayW
ztbiUOqfAYPycI8I1xDqnwHPbP76crsg6p+BHfXXa9KnBFD/DKiHHVaTH+NP
/TOwzax39ypVP+o//PfffybbuvlS/wz4nS5i51R5U/8MGI6wTd++2Iv6ZyDf
5uWcyXc9qH8GqiLK1soku1P/DOi9q9L/s82N+mcg8oSa8hJ7F+qfgRm1Wqf4
S52ofwZyTuFgi50j9R/uU664z4S/gfpnYJ2SYdv0LjvqP/z5S+6sFHNdT/15
cH9r+bTwsw315+H9zl3avQXW1J+H7PdR36ofWFF/Hi6pqPz2zbak/jxM4pn8
Co9eQ/15MEnu9WxMW0X9eWhtCPibUbWC+vMQ/Py+cKTscurPQ/rhW4N13GXU
nwe16+93JiiYUX8eKqdWFoytA/Xn4dSQtmDkeFPqz8PmtB6jUY1LqD8PyVPU
Pt46bUj9eViy/WbZzIv61J8Hq2y2j1aPLvXn4Z36dXszo8XUnwfZvWzbllPa
1J8H7oJrn/ONtKg/D4b1j1VjujSpPw+zXVjSd6wXUn8eSpOKO1TF51N/Hn4m
K4Vmv5lH/Xlw4Ht4v+1Vo/489LeE7jdSnEP9eTgpfN/Z6juL+vPgc4313vCx
KvUf/r13T8yU8VCh/sP+6x9aqkkpU38eJBxGxSnkzqD+PMhIsForMI36D/ee
p+7bMGUK9c/Eq9WfVsnOmET9M2H+sdujcOVE6p+JnMrEDze3/Uf9MxF86WTw
lwF56p+JD4ZBf2+myVH/TNz7UXFqhvp46p+Jx3UHu948GEf9MyEM5atcT5Ch
/plwr1Q+H7BemvpnYrSbp94R21HUPxNpPbOSQ6IlqX8mLNN058lfFaf+w5/3
fCl/YPZI6p+J2mOZrx+cEqX+mfidX/XYzWoE9c+ElXr+grxRItQ/E4EpPRXr
Lg4YMP0zsfdCxbK0rL8M52TCnu8iWZD2m+E9mch9Nlh1oOgnwwWZODJobl/Z
+53h4kzESbzsdbH+xnBpJm5ZRr5Se/SF4cpM3PQydH4b+pnhmkyESYn+zpj3
ieGbmRjLurDT/kcfw02ZuBKYNCRX38twayYc15lsk7zUw/DLTMROf9Mxv/Ud
w92ZqHK0V7uo+JbhT5m448MxGh/3huFfmciblrjz3u9OhkWycOBDw4MLO18x
LJWFN87HnC9avGRYNgtrnCZfatXuYFgxC/oV3Y/kB54yrJSFDJ9ZZe39bQyr
ZaF2++ty5VGtDGtmYYfU9k0KK1oY1s+ChTV/7pSjzQwjC5GzDQ/VKT1ieFUW
eM+n3m+6+IBh6yzsPW79an5gE8OOWXBoXjm3PfQew+5Z6GuzOsPTvcOwXxYi
fD6vmDyrkeGQLAQMnRwTZ3iT4Zgs9D44WdkUfp1hVhYUJtX6xN+rp/5Z+KGT
UyS1qo76D3+/1VrvdTpqqX8WtJxf//dOWEP9s6BRyX7tVFpN/bNwLegLOzLk
MvXPgvnGlRo3nKqofxbuOuWc1QuopP5Z0H718Ev3oQvUPwupn6wPaf0+T/2z
MIl11jI/uIz6Z8Fo7sJLr0XPUf8sNEu5p3WVllL/LOTKzeh37i+h/lnQXStq
0nriFPXPQpnHzmWdOSeoPx/6OlkRzvnF1J+P2b119zY1HaP+fEy61SJcOrOQ
+vPxaoOyburuI9Sfj09PIp4+n3OY+vPReL2nZu6jAurPx93o7PUdCw5Sfz7+
JOc/OdeVR/35CHRXCA64sY/683F4gtmct017qD8fQtvrY3WHdlF/PhabuXQW
r9tJ/flY13xhdPXV7dSfD40dB7tU126j/v/bv2F3/nsO9edDy2bT5NdB2dSf
j+qlz8wllAXUn4+B44+3+Q5mUn8+dD9IHWgV41F/PgrtSqMCFqRTfz7697jY
bIlPpf58DO05GLa6m0P9+YiV4EVeCEuh/nxMmOn7MFWRTf35cNFesm7rmWTq
z4e0aGPiI5dE6s/H6qvndjxYHE/9+XiT2nVCWy+W+vPx0uj9bTG3aOrPR0f+
jW2cokjqz8emTM+JauMjqD8fMnfXqO3aE0b9BTCxd76dbxRK/QVIMf49FP0p
mPoLkBkWnjBlbyD1F6BxrI9LSeBW6i/AfNHtc375b6H+AmzdG/r4n2Az9RdA
qmLkpl+PfKj/8Oft7jziZOhN/QXIH7M0r67ak/oLIB29+eGQmwf1F+Bhzerp
4pPcqb8A8XldS148dqX+AnhcSX40UOhM/QX47JjaO/vgRuovwOzUZ86O1Q7U
X4De1u/BN0U2UH8BrnE86l952VF/AdIlZEJNu2yp//DnLYmJP55iQ/0F6DTc
nzXe0Jr6C7B7UOvKDHkr6i/At6jIrpoOC+ovQGjnh6aaR6upvwC2b1zmTuxf
Sf0FKN77h/Vt/grqL8C5CymzqwXm1F8Aw/O7V44es4z6C3B0zEnnvGNLqb8A
qnpKDz2cQf0FcC2LHnhubUL9BehZkZf8a+IS6i/AoXcXy65LGVJ/ISQr6kYZ
KulTfyHSjb5aJTrrUn8hIuWsYj9V6FB/IeT9Jlybqa1N/YXYHrhuVFvjIuov
RF2OauKPBE3qL4REwfOhydkLqL8QvJhFuYU2GtRfiPsGBaEGJvOovxC+AdzG
Whs16i9Ead2yPV682dRfiKj7WoGxnTOpvxBZ4WLcbCdV6i+Ef2LPFPd+Zeov
hMPksZOa8pWovxBvThbcfHJ3OvUXYkWyq/StrKnUX4j9Dya/nxQxmfoLcdy4
0vAMR5H6C2Gk8GRqcYUC9Rdiutvo8xtl/qP+QrQ+1NGySJGn/kLkbtHR0Jog
R/2F+Nztp91fI0v9heCKyLv9JzOO+guh8k7vldf1MdRfCO/I4EG/E6OpvxDS
OcrqYhekqL8QhYoq+RZvJai/EPFWU0Zs0xen/kLIdjSGOZ4Qo/5C3Omb2bzO
QJT6Z6PnyAsnu9ci1D8bXNtDN5sth/SZ/tkYt/a2ZPSIAYYVs6G9+VzunFd/
GFbKxnHXhUHV3b8YVstGRfvsF1b//WRYMxtPjKeOUvX+zrB+Nu4NLemrePiV
YWTj55PekotuX/T/DwHhAgA=
      "]]}, 
    {RGBColor[0.6, 0.42664098839727194`, 0.24], LineBox[CompressedData["
1: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
IxeHW3vPXHL9uuL/ABus+gU=
      "]]}, 
    {RGBColor[0.2634521802031821, 0.6, 0.24], LineBox[CompressedData["
1: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
JPQn49z3gl3JuNzssdCfDKwS7E7G6krBnmQsGFsu9Cdj5U7B/mf31SqE/hRo
PhCsTUGf5YJ1KbCdEmxIwcNaT4T+FNTpI9iYghZ2waYUzN4s2JKC6NOCHSmo
USnYmYIf3qwU+lOwtrfg3BSUxwp2p6B0rmBPCn5xCfamYOZuwf4UjPldsCYV
6T7B2lSUVQjWpaKk1lOhPxULGwpGKs63FGx8dg/BpmceJNjy7PPGCHak4tEk
wc5UvJos2JWKxOmCc1NRdb5gdyqufCzYk4r62YK9qdj1pWB/Kg5tFKxJw+Ct
grVpMO0UrEtDZZ7Yn4bW+8T+NDy/X+xPw8zDYn8a1h0T+9Ng+03sT8MLf4j9
aRh+RuxPQ9Q5sT8N7f4S+9Nw5qLYn4ael8X+NMy9KvanYfV1sd+KBX+L/VaM
vCn2W/H0lthvxUd3xH4ryu6K/Vb0vSf2WzHbL/ZbsfG+2G/FjmKx34qtJWK/
FcsfiP1WTH0o9lthKBX7rfCJ9j67LxP7rWgVEPttOChaa8PAR2K/DUdFG2zo
+ljst+Fr0UYbapWL/TZMEW2xwS3aYYO2Quy3YYxolw1rROfacFG024b6T8R+
GwaL9towW7Tfhu2iNen4S7Q2HdUqxf50vCPakI4BopGOONHGdCwUbUrHJtGW
dPws2pGOs6Kd6bgr2pWOKk/F/nTUFu1OR2PRnnS0Ee1NR0/R/nQMEa2xY7xo
rR1TRevsSBVtsGOWaNiRJdpox1LRJjs+E22xwyXaYUeOaKcd20S77PhO1W/H
blW/HftU/XYcUPXbka/qt+O4qj8DHlV/Bk6p+jNwVtWfgT9V/Rm4oOrPwGVV
fwauqPozcF3Vn4Ebqv4M+FT9Gbil6s/AXVV/Bu6o+jNQpOrPwH1VP1mTiRJV
fyaKVf2ZeKjqJyMTpar+TJSp+jMRUPWTHZl4pOqnd1cmHqv6ye5MlKv6yd5M
PFH1Z6JC1T9d/a4l68iG6ep70Ltx+v//76/0T0elqp/sIDvJLnIu2U32kL1k
P/19mhlqa2eof19H74YZ+OfOG+wnG8kmsoXsIDvJLnIu2U32kL1kP1kzU20t
WUc2kEE2kk1kC9lBdpJd5Fyym+whe8l+ssahdghZSw4l68h6soEcRgY5nGwk
R5BNZDPZQraRHeQsspOcTXaRc8i55Dyym5xP9pALyV6yj+wnB8iaWWqHkLXk
ULKOrCcbyGFkkMPJRnIE2UQ2ky1kG9lBziI7ydlkFzmHnEvOI7vJ+WQPuZDs
JfvIfnKArJmtdghZSw4l68h6soEcRgY5nGwkR5BNZDPZQraRHeQsspOcTXaR
c8i55Dyym5xP9pALyV6yj+wnB8iaOWqHkLXkULKOrCcbyGFkkMPJRnIE2UQ2
ky1kG9lBziI7ydlkFzmHnEvOI7vJ+WQPuZDsJfvIfnKArJmrdghZSw4l68h6
soEcRgY5nGwkR5BNZDPZQraRHeQsspOcTXaRc8i55Dyym5xP9pALyV6yj+wn
B8iaeWqHkLXkULKOrCcbyGFkkMPJRnIE2UQ2ky1kG9lBziI7ydlkFzmHnEvO
I7vJ+WQPuZDsJfvIfnKArPlQ7RCylhxK1pH1ZAM5jAxyONlIjiCbyGayhWwj
O8hZZCc5m+wi55BzyXlkNzmf7CEXkr1kH9lPDpA189UOIWvJoWQdWU82kMPI
IIeTjeQIsolsJlvINrKDnEV2krPJLnIOOZecR3aT88keciHZS/aR/eQAWZOl
dghZSw4l68h6soEcRgY5nGwkR5BNZDPZQraRHeQsspOcTXaRc8i55Dyym5xP
9pALyV6yj+wnB8iaj9QOIWvJoWQdWU82kMPIIIeTjeQIsolsJlvINrKDnEV2
krPJLnIOOZecR3aT88keciHZS/aR/eQAWbNA7RCylhxK1pH1ZAM5jAxyONlI
jiCbyGayhWwjO8hZZCc5m+wi55BzyXlkNzmf7CEXkr1kH9lPDpA1C9UOIWvJ
oWQdWU82kMPIIIeTjeQIsolsJlvINrKDnEV2krPJLnIOOZecR3aT88keciHZ
S/aR/eQAWbNI7RCylhxK1pH1ZAM5jAxyONlIjiCbyGayhWwjO8hZZCc5m+wi
55BzyXlkNzmf7CEXkr1kH9lPDpA1i9UOIWvJoWQdWU82kMPIIIeTjeQIsols
JlvINrKDnEV2krPJLnIOOZecR3aT88keciHZS/aR/eQAWbNE7RCylhxK1pH1
ZAM5jAxyONlIjiCbyGayhWwjO8hZZCc5m+wi55BzyXlkNzmf7CEXkr1kH9lP
DpA1H6sdQtaSQ8k6sp5sIIeRofi/LoQ39A==
      "]]}, 
    {RGBColor[0.24, 0.47354534880363613`, 0.6], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 1000.}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{20., 20.}, {0., 0.}}]], "Output",
 CellChangeTimes->{
  3.674038983022341*^9, {3.674039042081135*^9, 3.67403907209039*^9}, 
   3.674039106357994*^9, 3.6740391976757193`*^9, {3.674042720649969*^9, 
   3.674042746238356*^9}, 3.6741035615461893`*^9, 3.674106442390134*^9, 
   3.674106521642786*^9, 3.6741065884524393`*^9, 3.674106818968067*^9, {
   3.674107924027174*^9, 3.674107954314973*^9}, 3.674108734640025*^9, 
   3.67410922037971*^9, {3.674109277028412*^9, 3.6741092883130083`*^9}, {
   3.674109914193829*^9, 3.6741099634932737`*^9}, 3.6742234046790037`*^9, 
   3.674223479071067*^9, 3.6743127359557333`*^9, 3.674312770712677*^9, 
   3.674313106880966*^9, 3.6743850130640097`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "1000"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.674039114182864*^9, 3.674039122736019*^9}, {
   3.674039262282177*^9, 3.6740392680148497`*^9}, 3.674042729641096*^9, {
   3.674105161072165*^9, 3.6741051641101503`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.4051462418329957`*^-66", ",", "6.830406588803401`*^-34", ",", 
   "6.83040658880295`*^-34", ",", "1.`", ",", "7.137069019248992`*^-67", ",", 
   "2.2112108213608647`*^-34", ",", "2.2112108213607193`*^-34", ",", "0.5`", 
   ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.674039123054928*^9, 3.674039198844853*^9, 3.6740392683597403`*^9, {
   3.6740427333708153`*^9, 3.674042748799206*^9}, 3.674103568462702*^9, 
   3.6741064473988113`*^9, 3.6741065238574047`*^9, 3.674106590043885*^9, 
   3.6741068205991583`*^9, 3.6741079351960287`*^9, 3.674108067676828*^9, 
   3.674108758121868*^9, {3.6741092020067053`*^9, 3.674109222054953*^9}, {
   3.6741092785553017`*^9, 3.674109291719212*^9}, 3.674223426826527*^9, 
   3.6742234814395237`*^9, 3.6743127359711313`*^9, 3.6743127774951572`*^9, 
   3.6743132654405527`*^9, 3.674385013075279*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["haplotypes"], "Input",
 CellChangeTimes->{{3.674105146488202*^9, 3.674105148517915*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Af", ",", "Bf"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Af", ",", "Bm"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Am", ",", "Bf"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Am", ",", "Bm"}], "}"}], ",", 
   RowBox[{"{", "Y", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6741051488795357`*^9, {3.6741092035990887`*^9, 3.6741092260545683`*^9}, 
   3.674223461355298*^9, 3.674223499176063*^9, 3.6743127944680967`*^9, 
   3.6743132835161343`*^9, 3.674385013106731*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export to C", "Section",
 CellChangeTimes->{{3.673360013926013*^9, 3.673360016413396*^9}}],

Cell["Output directory", "Text",
 CellChangeTimes->{{3.673361095452832*^9, 3.67336109795616*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"directory", "=", 
   RowBox[{
   "$HomeDirectory", "<>", 
    "\"\</Projects/sex_specific_epistasis/src/numerical/chromx/\>\""}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6733610280466957`*^9, 3.673361047913747*^9}, {
  3.6733610859314947`*^9, 3.673361091818492*^9}, {3.674223503302709*^9, 
  3.6742235057742434`*^9}, {3.674385033581253*^9, 3.674385034393137*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"s2c", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ToString", "[", 
     RowBox[{"CForm", "[", "x", "]"}], "]"}], "<>", "\"\<;\\n\\n\>\""}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.673425807452092*^9, 3.673425845840046*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"str", "=", 
   RowBox[{"\"\<wF = \>\"", "<>", 
    RowBox[{"s2c", "[", "wbarF", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"str", "=", 
   RowBox[{"str", "<>", "\"\<wM = \>\"", "<>", 
    RowBox[{"s2c", "[", "wbarM", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"iter", "=", "1"}], ",", 
    RowBox[{"iter", "\[LessEqual]", 
     RowBox[{
      RowBox[{"Length", "[", "haplotypes", "]"}], "-", "1"}]}], ",", 
    RowBox[{"iter", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<x\>\"", "<>", 
       RowBox[{"ToString", "[", "iter", "]"}], "<>", "\"\<tplus1 = \>\"", "<>", 
       RowBox[{"s2c", "[", 
        RowBox[{
         FractionBox["1", "wF"], 
         RowBox[{"xtplus1", "[", 
          RowBox[{"[", "iter", "]"}], "]"}]}], "]"}]}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"iter", "=", "1"}], ",", 
    RowBox[{"iter", "\[LessEqual]", 
     RowBox[{"Length", "[", "haplotypes", "]"}]}], ",", 
    RowBox[{"iter", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<y\>\"", "<>", 
       RowBox[{"ToString", "[", "iter", "]"}], "<>", "\"\<tplus1 = \>\"", "<>", 
       RowBox[{"s2c", "[", 
        RowBox[{
         FractionBox["1", "wM"], 
         RowBox[{"ytplus1", "[", 
          RowBox[{"[", "iter", "]"}], "]"}]}], "]"}]}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"directory", "<>", "\"\<recursions.txt\>\""}], ",", "str"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.673425706733491*^9, 3.673425708628674*^9}, {
  3.673425786340439*^9, 3.673425942591544*^9}, {3.673426068383106*^9, 
  3.673426085232439*^9}, {3.673426158595027*^9, 3.673426218242667*^9}, {
  3.6734263233749*^9, 3.673426365300035*^9}, {3.674223578988377*^9, 
  3.674223619272138*^9}}],

Cell[BoxData["\<\"/home/bram/Projects/sex_specific_epistasis/src/numerical/\
chromx/recursions.txt\"\>"], "Output",
 CellChangeTimes->{
  3.6734263718520107`*^9, 3.67358542610322*^9, 3.673979681871223*^9, 
   3.674009894644184*^9, {3.674223612026416*^9, 3.674223622957114*^9}, {
   3.674385013978017*^9, 3.674385038140255*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2487, 1573},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.5,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 139, 1, 138, "Title"],
Cell[721, 25, 139, 2, 47, "Input"],
Cell[CellGroupData[{
Cell[885, 31, 158, 2, 120, "Section"],
Cell[1046, 35, 615, 16, 47, "Input"],
Cell[1664, 53, 1434, 36, 176, "Input"],
Cell[3101, 91, 2842, 81, 336, "Input"],
Cell[5946, 174, 1969, 46, 272, "Input"],
Cell[CellGroupData[{
Cell[7940, 224, 1143, 30, 80, "Input"],
Cell[9086, 256, 17916, 475, 258, "Output"]
}, Open  ]],
Cell[27017, 734, 1494, 32, 144, "Input"],
Cell[28514, 768, 102, 1, 46, "Text"],
Cell[28619, 771, 2718, 69, 304, "Input"],
Cell[CellGroupData[{
Cell[31362, 844, 523, 14, 47, "Input"],
Cell[31888, 860, 15421, 451, 746, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47358, 1317, 97, 1, 120, "Section"],
Cell[47458, 1320, 2310, 62, 176, "Input"],
Cell[CellGroupData[{
Cell[49793, 1386, 103, 1, 47, "Input"],
Cell[49899, 1389, 1940, 62, 67, "Output"]
}, Open  ]],
Cell[51854, 1454, 410, 12, 80, "Input"],
Cell[CellGroupData[{
Cell[52289, 1470, 133, 2, 47, "Input"],
Cell[52425, 1474, 287, 5, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52749, 1484, 104, 1, 47, "Input"],
Cell[52856, 1487, 637, 16, 46, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53542, 1509, 105, 1, 120, "Section"],
Cell[53650, 1512, 4988, 121, 368, "Input"],
Cell[58641, 1635, 1517, 27, 47, "Input"],
Cell[CellGroupData[{
Cell[60183, 1666, 293, 7, 47, "Input"],
Cell[60479, 1675, 101022, 1668, 376, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161538, 3348, 300, 6, 47, "Input"],
Cell[161841, 3356, 906, 16, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162784, 3377, 102, 1, 47, "Input"],
Cell[162889, 3380, 550, 15, 46, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[163488, 3401, 96, 1, 120, "Section"],
Cell[163587, 3404, 97, 1, 46, "Text"],
Cell[163687, 3407, 402, 9, 47, "Input"],
Cell[164092, 3418, 280, 8, 47, "Input"],
Cell[CellGroupData[{
Cell[164397, 3430, 2090, 52, 464, "Input"],
Cell[166490, 3484, 327, 5, 46, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
